AWSTemplateFormatVersion: 2010-09-09
Description: Configure the Ghost blog host

# inception.cfn.yaml template should be deployed before this template
# as it creates the VPC and the rest of the networking resources.

Parameters:
  # Fetch the latest AMI without hard-coding the image id
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

Resources:
  # SSM to manage the Ghost host
  MyGhostHostManagementRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  MyGhostHostInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref MyGhostHostManagementRole

  MyGhostHostInstance:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install docker, ghost and traefik
      AWS::CloudFormation::Init:
        config:
          files:
            "/data/traefik/ghost.env":
              content: !Sub |
                mail__transport=SMTP
                mail__from=Jay For Web <jayforweb@mg.jayforweb.com>
                mail__options__service=mailgun
                mail__options__auth__user=my-mailgun-user
                mail__options__auth__pass=my-super-secret-password
                url=https://jayforweb.com

              mode: '000600'
              owner: root
              group: root

            "/data/traefik/docker-compose.yaml":
              content: !Sub |
                version: "3"
                networks:
                  web:
                    external: true

                services:
                  traefik:
                    image: traefik:alpine
                    restart: always
                    ports:
                      - "80:80"
                      - "443:443"
                    volumes:
                      - /var/run/docker.sock:/var/run/docker.sock
                      - /data/traefik/traefik.toml:/traefik.toml
                      - /data/traefik/acme.json:/acme.json
                    labels:
                      - traefik.backend=traefik
                      - traefik.enable=false
                    networks:
                      - web

                  ghost:
                    image: ghost:alpine
                    restart: always
                    env_file:
                      - /data/traefik/ghost.env
                    volumes:
                      - /data/blogdir:/var/lib/ghost/content
                    labels:
                      - traefik.backend=friendlyghost
                      - traefik.docker.network=web
                      - traefik.frontend.rule=Host:jayforweb.com
                      - traefik.port=2368
                    networks:
                      - web
              mode: '000644'
              owner: root
              group: root

            "/data/traefik/traefik.toml":
              content: !Sub |
                logLevel = "ERROR"

                defaultEntryPoints = ["http", "https"]

                [entryPoints]
                [entryPoints.http]
                address = ":80"

                [entryPoints.http.redirect]
                entryPoint = "https"
                permanent = true

                [entryPoints.https]
                address = ":443"

                [entryPoints.https.redirect]
                regex = "^https://www.(.*)"
                replacement = "https://$1"
                permanent = true

                [entryPoints.https.tls]
                compress = true

                [acme]
                email = "jayanath@gmail.com"
                storage = "acme.json"
                entryPoint = "https"

                [acme.tlsChallenge]
                onHostRule = true

                [acme.httpChallenge]
                entryPoint = "http"

                [[acme.domains]]
                main = "jayforweb.com"
                sans = ["www.jayforweb.com"]

                [docker]
                endpoint = "unix:///var/run/docker.sock"
                domain = "jayforweb.com"
                watch = true
                network = "web"

              mode: '000644'
              owner: root
              group: root

          commands:
            "a":
              command: "touch /data/traefik/acme.json"
            "b":
              command: "chmod 600 /data/traefik/acme.json"
            "c":
              command: "sudo yum update -y"
            "d":
              command: "yes | sudo amazon-linux-extras install docker"
            "e":
              command: "sudo service docker start"
            "f":
              command: "sudo usermod -a -G docker ec2-user"
            "g":
              command: "sudo yum install -y git"
            "h":
              command: "curl -L https://github.com/docker/compose/releases/download/1.25.4/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose"
            "i":
              command: "chmod +x /usr/local/bin/docker-compose"
            "j":
              command: "sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose"
            "k":
              command: "docker network create web"
            "l":
              command: "docker-compose up -d"
              cwd: "/data/traefik/"

    Properties:
      IamInstanceProfile: !Ref MyGhostHostInstanceProfile
      InstanceType: t2.micro
      ImageId: !Ref LatestAmiId
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - Fn::ImportValue: PRIMARY-GHOST-SG
          SubnetId:
            Fn::ImportValue: PRIMARY-GHOST-SUBNET
      Tags:
        - Key: Name
          Value: Ghost Blog Host Instance
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash -xe
            # Get the latest CloudFormation package
            yum update -y aws-cfn-bootstrap
            # Start cfn-init
            /opt/aws/bin/cfn-init -s ${AWS::StackId} -r MyGhostHostInstance --region ${AWS::Region} || error_exit 'Failed to run cfn-init'
            # Start up the cfn-hup daemon to listen for changes to the EC2 instance metadata
            /opt/aws/bin/cfn-hup || error_exit 'Failed to start cfn-hup'
            # All done so signal success
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource MyGhostHostInstance --region ${AWS::Region}

  MyGhostHostedZone:
    Type: "AWS::Route53::HostedZone"
    Properties:
      HostedZoneConfig:
        Comment: 'Hosted zone for jayforweb.com test domain'
      Name: 'jayforweb.com'

  MyGhostMainRecordSet:
    DependsOn: MyGhostHostedZone
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId : !Ref MyGhostHostedZone
      Name: jayforweb.com
      ResourceRecords:
      - !GetAtt MyGhostHostInstance.PublicIp
      TTL: '300'
      Type: A

  # TODO: need to check again about how to add www.jayforweb.com as an alias to jayforweb.com
  # This can be done on console, but it gives an error here.

  # MyGhostAliasRecordSet:
  #   DependsOn: MyGhostMainRecordSet
  #   Type: AWS::Route53::RecordSet
  #   Properties:
  #     Name: www.jayforweb.com
  #     Type: A
  #     AliasTarget:
  #       HostedZoneId: !Ref MyGhostHostedZone
  #       DNSName: jayforweb.com

Outputs:
  InstanceId:
    Description: The instance ID of the ghost server
    Value:
      Ref: MyGhostHostInstance
  PublicIP:
    Description: Public IP address of the ghost server
    Value:
      !GetAtt MyGhostHostInstance.PublicIp
